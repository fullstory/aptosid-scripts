#!/bin/bash
#
# Copyright 2007 Kel Modderman <kel@otaku42.de>
# License: GPLv2
#
# Script to check if firmware or other non-free drivers are required.
#

function show_all_cards() {
	echo "Atheros PCI wireless card"
	echo "acx"
	echo "atmel"
	echo "at76_usb"
	echo "av7110"
	echo "b43"
	echo "b43legacy"
	echo "bcm43xx"
	echo "bluebird"
	echo "dec2000t"
	echo "dec2500t"
	echo "dec3000t"
	echo "dibusb"
	echo "ipw2100"
	echo "ipw2200"
	echo "iwl3945"
	echo "iwl4965"
	echo "or51211"
	echo "or51132_qam"
	echo "or51132_vsb"
	echo "p54pci"
	echo "p54usb"
	echo "prism54"
	echo "rt61"
	echo "rt73"
	echo "sp8870"
	echo "sp887x"
	echo "tda1004x"
	echo "zd1201"
	echo "zd1211"
	exit
}

function display_message() {
	# we need gettext (is loaded in ssft.sh or cloned...)
	if [ -f /usr/bin/gettext.sh ]; then
		. /usr/bin/gettext.sh || exit 1
	else
		exit 1
	fi

	export TEXTDOMAIN="fw-detect"
	export TEXTDOMAINDIR=/usr/share/locale

	# determine system status
	SSFTSH="$(which ssft.sh)"       || SSFTSH="/usr/bin/ssft.sh"
	
	# initialize ssft
	. "$SSFTSH"

	# --- If you want another frontend, do "export SSFT_FRONTEND=$(ssft_choose_frontend)"
	#     before starting fw-detect
	case "$1" in

# ------------------------------------------------------------------
		apt-get)
			ssft_display_message \
"$(gettext "Detected driver that requires firmware to operate")" \
"$(gettext "\
# 
# Follow these instructions to obtain the correct firmware
# and activate the ${driver} driver:

apt-get update
${fw}
modprobe -r ${driver}
modprobe ${driver}

You must first configure apt to install this non-free software,
refer to the offline manual that came with this distribution.
")"
			;;

# ------------------------------------------------------------------
		http)
			if [[ ${fw_url} ]]; then
				FW_URL=$(gettext "\
# 
# You can obtain the firmware for ${driver} directly from:
#     ${fw_url}
# 
# Download the archive and uncompress it.
# Copy the contents to:
#     /lib/firmware/")
			fi

			ssft_display_message \
"$(gettext "Detected driver that requires firmware to operate")" \
"$(gettext "\
# 
# There is no readily available firmware package for ${driver}
# Visit the following page for information on how to obtain and
# install the required firmware:
#     ${fw}
${FW_URL}
# 
# Once the firmware files have been installed, the ${driver}
# must be reloaded to activate the hardware.
# Use the following commands:
# 
modprobe -r ${driver}
modprobe ${driver}")"
			;;

# ------------------------------------------------------------------
		dvb)
			if ! ((DVB)); then
			    dvb_message="$(gettext "\
# The get_dvb_firmware script is required to install DVB related firmware.
# <http://www.kernel.org/doc/Documentation/dvb/get_dvb_firmware>
# Download it, copy it to /usr/local/bin and make it executable.
#")"
			fi
			ssft_display_message \
"$(gettext "Detected driver that requires firmware to operate")" \
"$(gettext "\
$dvb_message
# Follow these instructions to obtain the correct firmware
# and activate the ${driver} driver:
#") 
cd /tmp
${fw}
mv ${fw_file} /lib/firmware"
			;;

# ------------------------------------------------------------------
		atheros)
			ssft_display_message \
"$(gettext "Detected Atheros PCI wireless card.")" \
"$(gettext "\
# 
# It requires the MadWifi driver to operate.
# Follow these instructions to install MadWifi:
# 
m-a a-i madwifi

You must first configure apt to install this non-free software,
refer to the offline manual that came with this distribution.
")"
			;;

	esac

}

function install_driver() {

	# root check
	if ((UID)); then
		echo "Error: You must be root to run this script!"
		exit 1
	fi

	# driver
	driver=$@

	echo $driver

	if [ "$driver" = "Atheros PCI wireless card" ]; then
		m-a a-i madwifi
	else
		case "${driver}" in
			acx*)
				fw="http://acx100.sourceforge.net/wiki/Firmware"
				fw_url="http://www.kazer.org/acx-firmware-20060207.tar.bz2"
				;;
			atmel*|at76_usb)
				fw="apt-get install atmel-firmware"
				;;
			av7110)
				fw="get_dvb_firmware av7110"
				fw_file="dvb-ttpci-01.fw"
				;;
			b43)
				fw="apt-get install b43-fwcutter"
				;;
			b43legacy)
				fw="apt-get install b43-fwcutter"
				;;
			bcm43xx*)
				fw="apt-get install bcm43xx-fwcutter b43-fwcutter"
				;;
			bluebird)
				fw="get_dvb_firmware bluebird"
				fw_file="dvb-usb-bluebird-01.fw"
				;;
			dec*)
				fw="get_dvb_firmware ${driver}"
				fw_file="dvb-ttusb-dec-${driver}.fw"
				;;
			dibusb)
				fw="get_dvb_firmware dibusb"
				fw_file="dvb-dibusb-5.0.0.11.fw"
				;;
			ipw2100|ipw2200)
				fw="apt-get install ${driver}-firmware"
				;;
			iwl3945|iwl4965)
				fw="apt-get install firmware-iwlwifi"
				;;
			or51*)
				fw="get_dvb_firmware ${driver}"
				fw_file="dvb-fe-${driver}.fw"
				;;
			p54pci)
				fw="http://prism54.org/firmware/"
				;;
			p54usb)
				fw="http://jbnote.free.fr/prism54usb/ - use /lib/firmware/"
				;;
			prism54)
				fw="http://jbnote.free.fr/prism54usb/ - use /lib/firmware/"
				;;
			rt61*|rt73*)
				fw="apt-get install firmware-ralink"
				;;
			sp887*)
				fw="get_dvb_firmware ${driver}"
				fw_file="dvb-fe-${driver}.fw"
				;;
			tda1004x)
				fw="get_dvb_firmware tda10046"
				fw_file="dvb-fe-tda10046.fw"
				;;
			zd1201)
				fw="http://linux-lc100020.sourceforge.net/"
				fw_url="http://prdownloads.sourceforge.net/linux-lc100020/zd1201-0.14-fw.tar.gz?download"
				;;
			zd1211*)
				fw="apt-get install zd1211-firmware"
				;;
		esac

		case "${fw}" in
			apt-get*)
				apt-get update
				${fw}
				modprobe -r ${driver}
				modprobe ${driver}
				;;
			http*)
				display_message http
				;;
			get_dvb_firmware*)
				if ((DVB)); then
				    TDIR="$(mktemp -d)"
				    pushd "$TDIR"
				    ${fw}
				    mv "${fw_file}" /lib/firmware
				    popd
				    rm -fr "$TDIR"
				else
				    display_message dvb
				fi
				;;
		esac
	fi

	exit
}

#
# check for get_dvb_firmware script
#
[[ -x $(which get_dvb_firmware) ]] && DVB=1 || DVB=0

while getopts aisvxy opt; do
	case "${opt}" in
		a)
			show_all_cards
			;;
		i)
			install_driver $2
			;;
		s)
			short="TRUE"
			;;
		v)
			((verbosity++))
			;;
		x)
			set -x
			;;
		y)
			#installable driver
			short="TRUE"
			install_possible="TRUE"
			;;
	esac
done

function say() {
	[[ ${verbosity} ]] && echo ${@}
}

function kmodule_ok() {
	local kmod="$(/sbin/modinfo -n ${1} 2>/dev/null)"

	if [[ -f ${kmod} ]]; then
		say "Kernel module: ${kmod}"
		return 0
	fi

	return 1
}

function firmware_ok() {
	local fw="${1}" fw_dir="${2}"

	for f in ${fw_dir:=/lib/firmware}/${fw}*; do
		if [[ -e ${f} ]]; then
			say "Firmware:"
			say ${fw_dir:=/lib/firmware}/${fw}*
			return 0
		fi
	done

	say "Requires firmware"

	return 1
}

#
# check modules have required firmware
#
say "Looking for common drivers that need firmware..." 
for driver in /sys/module/*; do
	[ -d "${driver}" ] || continue
	driver=${driver#/sys/module/}
	
	unset fw fw_url

	case "${driver}" in
		acx*)
			say "Driver:  ${driver}"
			firmware_ok tiacx && continue
			fw="http://acx100.sourceforge.net/wiki/Firmware"
			fw_url="http://www.kazer.org/acx-firmware-20060207.tar.bz2"
			;;
		atmel*|at76_usb)
			say "Driver:  ${driver}"
			firmware_ok atmel_at76c5 && continue
			fw="apt-get install atmel-firmware"
			;;
		av7110)
			say "Driver:  ${driver}"
			firmware_ok dvb-ttpci-01.fw && continue
			fw="get_dvb_firmware av7110"
			fw_file="dvb-ttpci-01.fw"
			;;
		b43)
			say "Driver:  ${driver}"
			firmware_ok *.fw /lib/firmware/b43 && continue
			fw="apt-get install b43-fwcutter"
			;;
		b43legacy)
			say "Driver:  ${driver}"
			firmware_ok *.fw /lib/firmware/b43legacy && continue
			fw="apt-get install b43-fwcutter"
			;;
		bcm43xx*)
			say "Driver:  ${driver}"
			firmware_ok bcm43xx && continue
			fw="apt-get install bcm43xx-fwcutter b43-fwcutter"
			;;
		bluebird)
			say "Driver:  ${driver}"
			firmware_ok dvb-usb-bluebird-01.fw && continue
			fw="get_dvb_firmware bluebird"
			fw_file="dvb-usb-bluebird-01.fw"
			;;
		dec*)
			say "Driver:  ${driver}"
			firmware_ok dvb-ttusb-dec-${driver}.fw && continue
			fw="get_dvb_firmware ${driver}"
			fw_file="dvb-ttusb-dec-${driver}.fw"
			;;
		diusb)
			say "Driver:  ${driver}"
			firmware_ok get_dvb_firmware && continue
			fw="get_dvb_firmware diusb"
			fw_file="dvb-diusb-5.0.0.11.fw"
			;;
		ipw2100|ipw2200)
			say "Driver:  ${driver}"
			firmware_ok "${driver}" && continue
			fw="apt-get install ${driver}-firmware"
			;;
		iwl3945|iwl4965)
			say "Driver:  ${driver}"
			firmware_ok "iwlwifi-${driver#iwl}" && continue
			fw="apt-get install firmware-iwlwifi"
			;;
		or51*)
			say "Driver:  ${driver}"
			firmware_ok dvb-fe-${driver}.fw && continue
			fw="get_dvb_firmware ${driver}"
			fw_file="dvb-fe-${driver}.fw"
			;;
		p54pci)
			say "Driver:  ${driver}"
			if firmware_ok [12]\.[0-9]\.[0-9]\.[0-9]\.arm || firmware_ok isl; then
				continue
			fi
			fw="http://prism54.org/firmware/"
			;;
		p54usb)
			say "Driver:  ${driver}"
			if firmware_ok isl3890usb || firmware_ok isl3887usb_bare; then
				continue
			fi
			fw="http://jbnote.free.fr/prism54usb/ - use /lib/firmware/"
			;;
		prism54)
			say "Driver:  ${driver}"
			firmware_ok isl3886 && continue
			fw="http://jbnote.free.fr/prism54usb/ - use /lib/firmware/"
			;;
		rt61*)
			say "Driver:  ${driver}"
			firmware_ok rt2561 && continue
			fw="apt-get install firmware-ralink"
			;;
		rt73*)
			say "Driver:  ${driver}"
			firmware_ok rt73 && continue
			fw="apt-get install firmware-ralink"
			;;
		sp887*)
			say "Driver:  ${driver}"
			firmware_ok dvb-fe-${driver} && continue
			fw="get_dvb_firmware ${driver}"
			fw_file="dvb-fe-${driver}"
			;;
		tda1004x)
			say "Driver: ${driver}"
			firmware_ok dvb-fe-tda10046.fw && continue
			fw="get_dvb_firmware tda10046"
			fw_file="dvb-fe-tda10046.fw"
			;;
		zd1201)
			say "Driver:  ${driver}"
			firmware_ok "${driver}" && continue
			fw="http://linux-lc100020.sourceforge.net/"
			fw_url="http://prdownloads.sourceforge.net/linux-lc100020/zd1201-0.14-fw.tar.gz?download"
			;;
		zd1211*)
			say "Driver:  ${driver}"
			firmware_ok zd1211 /lib/firmware/zd1211 && continue
			fw="apt-get install zd1211-firmware"
			;;
		*)
			if [[ ${verbosity} -ge 2 ]]; then
				echo "Ignoring ${driver}..."
			fi
			;;
	esac


	if [ "$short" = "TRUE" ]; then
		if [ -n "$fw" ]; then
			if [ "$install_possible"  = "TRUE" ]; then
				case "${fw}" in
					apt-get*)
						echo $driver
						;;
					get_dvb_firmware*)
						((DVB)) && echo $driver
						;;
				esac
			else
				echo $driver
			fi
		fi
	else
		case "${fw}" in
			apt-get*)
				display_message apt-get
				;;
			http*)
				display_message http
				;;
			get_dvb_firmware*)
				display_message dvb
				;;
		esac
	fi
done

#
# look for atheros hardware
#
say "Looking for Atheros hardware..."
if find /sys/devices/ -type f -name vendor -print0 | xargs -0 grep -s -q '0x168c'; then
	if kmodule_ok ath_pci; then
		say "Madwifi installed."
	else
		if [ "$short" = "TRUE" ]; then
			echo "Atheros PCI wireless card"
		else
			display_message atheros
		fi
	fi
fi
