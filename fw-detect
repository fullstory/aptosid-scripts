#!/bin/bash
#
# Copyright 2007 Kel Modderman <kel@otaku42.de>
# License: GPLv2
#
# Script to check if firmware or other non-free drivers are required.
#

function show_all_cards() {
	echo "Atheros PCI wireless card"
	echo "acx"
	echo "atmel"
	echo "at76_usb"
	echo "b43"
	echo "b43legacy"
	echo "bcm43xx"
	echo "ipw2100"
	echo "ipw2200"
	echo "iwl3945"
	echo "iwl4965"
	echo "p54pci"
	echo "p54usb"
	echo "prism54"
	echo "rt61"
	echo "rt73"
	echo "zd1201"
	echo "zd1211"
	exit
}

function install_driver() {

	# root check
	if (($UID)); then
		echo "Error: You must be root to run this script!"
		exit 1
	fi

	# driver
	driver=$@

	echo $driver

	if [ "$driver" = "Atheros PCI wireless card" ]; then
		apt-get update
		module-assistant --text-mode --non-inter auto-install madwifi
		modprobe ath_pci
	else
		case "${driver}" in
			acx*)
				fw="http://acx100.sourceforge.net/wiki/Firmware"
				fw_url="http://www.kazer.org/acx-firmware-20060207.tar.bz2"
				;;
			atmel*|at76_usb)
				fw="apt-get install atmel-firmware";;
			b43)
				fw="apt-get install b43-fwcutter";;
			b43legacy)
				fw="apt-get install b43-fwcutter";;
			bcm43xx*)
				fw="apt-get install bcm43xx-fwcutter b43-fwcutter";;
			ipw2100|ipw2200)
				fw="apt-get install ${driver}-firmware";;
			iwl3945|iwl4965)
				fw="apt-get install firmware-iwlwifi";;
			p54pci)
				fw="http://prism54.org/firmware/";;
			p54usb)
				fw="http://jbnote.free.fr/prism54usb/ - use /lib/firmware/";;
			prism54)
				fw="http://jbnote.free.fr/prism54usb/ - use /lib/firmware/";;
			rt61*)
				fw="apt-get install firmware-ralink";;
			rt73*)
				fw="apt-get install firmware-ralink";;
			zd1201)
				fw="http://linux-lc100020.sourceforge.net/"
				fw_url="http://prdownloads.sourceforge.net/linux-lc100020/zd1201-0.14-fw.tar.gz?download"
				;;
			zd1211*)
				fw="apt-get install zd1211-firmware";;
		esac

		case "${fw}" in
			apt-get*)
				apt-get update
				${fw}
				modprobe -r ${driver}
				modprobe ${driver}
				;;
			http*)
				echo "#"
				echo "# Detected driver that requires firmware to operate."
				echo "# There is no readily available firmware package for ${driver}"
				echo "# Visit the following page for information on how to obtain and"
				echo "# install the required firmware:"
				echo "#   ${fw}"
				if [[ ${fw_url} ]]; then
					echo "#"
					echo "# You can obtain the firmware for ${driver} directly from:"
					echo "#   ${fw_url}"
					echo "#"
					echo "# Download the archive and uncompress it. Copy the contents to:"
					echo "#   /lib/firmware/"
				fi
				echo "#"
				echo "# Once the firmware files have been installed, the ${driver} must be"
				echo "# reloaded to activate the hardware. Use the following commands:"
				echo "#"
				echo "modprobe -r ${driver}"
				echo "modprobe ${driver}"
				echo ""
				;;
		esac
	fi

	exit
}

while getopts aisvx opt; do
	case "${opt}" in
		a)
			show_all_cards
			;;
		i)
			install_driver $2
			;;
		s)
			short="TRUE"
			;;
		v)
			((verbosity++))
			;;
		x)
			set -x
			;;
	esac
done

function say() {
	[[ ${verbosity} ]] && echo ${@}
}

function kmodule_ok() {
	local kmod="$(/sbin/modinfo -n ${1} 2>/dev/null)"

	if [[ -f ${kmod} ]]; then
		say "Kernel module: ${kmod}"
		return 0
	fi

	return 1
}

function firmware_ok() {
	local fw="${1}" fw_dir="${2}"

	for f in ${fw_dir:=/lib/firmware}/${fw}*; do
		if [[ -e ${f} ]]; then
			say "Firmware:"
			say ${fw_dir:=/lib/firmware}/${fw}*
			return 0
		fi
	done

	say "Requires firmware"

	return 1
}

#
# check modules have required firmware
#
say "Looking for common drivers that need firmware..." 
for d in /sys/bus/*/drivers/*; do
	[[ -d ${d} ]] && driver=${d##*/} || driver=
	
	fw= fw_url=

	case "${driver}" in
		acx*)
			say "Driver:  ${driver}"
			firmware_ok tiacx && continue
			fw="http://acx100.sourceforge.net/wiki/Firmware"
			fw_url="http://www.kazer.org/acx-firmware-20060207.tar.bz2"
			;;
		atmel*|at76_usb)
			say "Driver:  ${driver}"
			firmware_ok atmel_at76c5 && continue
			fw="apt-get install atmel-firmware"
			;;
		b43)
			say "Driver:  ${driver}"
			firmware_ok *.fw /lib/firmware/b43 && continue
			fw="apt-get install b43-fwcutter"
			;;
		b43legacy)
			say "Driver:  ${driver}"
			firmware_ok *.fw /lib/firmware/b43legacy && continue
			fw="apt-get install b43-fwcutter"
			;;
		bcm43xx*)
			say "Driver:  ${driver}"
			firmware_ok bcm43xx && continue
			fw="apt-get install bcm43xx-fwcutter b43-fwcutter"
			;;
		ipw2100|ipw2200)
			say "Driver:  ${driver}"
			firmware_ok "${driver}" && continue
			fw="apt-get install ${driver}-firmware"
			;;
		iwl3945|iwl4965)
			say "Driver:  ${driver}"
			firmware_ok "iwlwifi-${driver#iwl}" && continue
			fw="apt-get install firmware-iwlwifi"
			;;
		p54pci)
			say "Driver:  ${driver}"
			if firmware_ok [12]\.[0-9]\.[0-9]\.[0-9]\.arm || firmware_ok isl; then
				continue
			fi
			fw="http://prism54.org/firmware/"
			;;
		p54usb)
			say "Driver:  ${driver}"
			if firmware_ok isl3890usb || firmware_ok isl3887usb_bare; then
				continue
			fi
			fw="http://jbnote.free.fr/prism54usb/ - use /lib/firmware/"
			;;
		prism54)
			say "Driver:  ${driver}"
			firmware_ok isl3886 && continue
			fw="http://jbnote.free.fr/prism54usb/ - use /lib/firmware/"
			;;
		rt61*)
			say "Driver:  ${driver}"
			firmware_ok rt2561 && continue
			fw="apt-get install firmware-ralink"
			;;
		rt73*)
			say "Driver:  ${driver}"
			firmware_ok rt73 && continue
			fw="apt-get install firmware-ralink"
			;;
		zd1201)
			say "Driver:  ${driver}"
			firmware_ok "${driver}" && continue
			fw="http://linux-lc100020.sourceforge.net/"
			fw_url="http://prdownloads.sourceforge.net/linux-lc100020/zd1201-0.14-fw.tar.gz?download"
			;;
		zd1211*)
			say "Driver:  ${driver}"
			firmware_ok zd1211 /lib/firmware/zd1211 && continue
			fw="apt-get install zd1211-firmware"
			;;
		*)
			if [[ ${verbosity} -ge 2 ]]; then
				echo "Ignoring ${driver}..."
			fi
			;;
	esac


	if [ "$short" = "TRUE" ]; then
		if [ -n "$fw" ]; then
			echo $driver
		fi
	else
		case "${fw}" in
			apt-get*)
				echo "#"
				echo "# Detected driver that requires firmware to operate."
				echo "# Follow these instructions to obtain the correct firmware"
				echo "# and activate the ${driver} driver:"
				echo "#"
				echo "apt-get update"
				echo "${fw}"
				echo "modprobe -r ${driver}"
				echo "modprobe ${driver}"
				echo ""
				echo "You must first configure apt to install this non-free software,"
				echo "refer to the offline manual that came with this distribution."
				echo ""
				;;
			http*)
				echo "#"
				echo "# Detected driver that requires firmware to operate."
				echo "# There is no readily available firmware package for ${driver}"
				echo "# Visit the following page for information on how to obtain and"
				echo "# install the required firmware:"
				echo "#   ${fw}"
				if [[ ${fw_url} ]]; then
					echo "#"
					echo "# You can obtain the firmware for ${driver} directly from:"
					echo "#   ${fw_url}"
					echo "#"
					echo "# Download the archive and uncompress it. Copy the contents to:"
					echo "#   /lib/firmware/"
				fi
				echo "#"
				echo "# Once the firmware files have been installed, the ${driver} must be"
				echo "# reloaded to activate the hardware. Use the following commands:"
				echo "#"
				echo "modprobe -r ${driver}"
				echo "modprobe ${driver}"
				echo ""
				;;
		esac
	fi
done

#
# look for atheros hardware
#
say "Looking for Atheros hardware..."
if find /sys/devices/ -type f -name vendor -print0 | xargs -0 grep -s -q '0x168c'; then
	if kmodule_ok ath_pci; then
		say "Madwifi installed."
	else
		if [ "$short" = "TRUE" ]; then
			echo "Atheros PCI wireless card"
		else
			echo "#"
			echo "# Detected Atheros PCI wireless card."
			echo "# It requires the MadWifi driver to operate."
			echo "# Follow these instructions to install MadWifi:"
			echo "#"
			echo "apt-get update"
			echo "module-assistant --text-mode --non-inter auto-install madwifi"
			echo "modprobe ath_pci"
			echo ""
			echo "You must first configure apt to install this non-free software,"
			echo "refer to the offline manual that came with this distribution."
			echo ""
		fi
	fi
fi
